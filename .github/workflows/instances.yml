name: DAMAP Backend Instances

env:
  REGISTRY: ghcr.io

on:

  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        required: false
        default: 'main'
      instance:
        type: choice
        description: 'Choose the backend instance'
        options:
        - both
        - MUG
        - TUG
        required: false
        default: both

jobs:
  determine-instances:
    runs-on: ubuntu-latest
    outputs:
      instances: ${{ steps.set-instances.outputs.instances }}
    steps:
      - id: set-instances
        run: |
          if [ "${{ github.event.inputs.instance }}" = "MUG" ]; then
            echo "instances=[\"MUG\"]" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.instance }}" = "TUG" ]; then
            echo "instances=[\"TUG\"]" >> $GITHUB_OUTPUT
          else
            echo "instances=[\"MUG\", \"TUG\"]" >> $GITHUB_OUTPUT
          fi

  build-backend-instances:
    needs: determine-instances
    runs-on: ubuntu-latest
    strategy:
      matrix:
        instance: ${{ fromJSON(needs.determine-instances.outputs.instances) }}
    
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch || github.ref }}

    - name: Convert repository name to lowercase
      run: |
        echo "IMAGE_NAME=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
        echo "INSTANCE_LOWER=$(echo '${{ matrix.instance }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

    - name: Determine Docker tag
      run: |
        if [[ "${{ github.event.inputs.branch }}" != "" ]]; then
          DOCKER_TAG="${{ github.event.inputs.branch }}"
        elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
          DOCKER_TAG="${GITHUB_REF#refs/tags/}"
        elif [[ "${{ github.ref }}" == refs/pull/* ]]; then
          DOCKER_TAG="pr-${{ github.event.number }}"
        else
          DOCKER_TAG="${GITHUB_REF#refs/heads/}"
        fi
        echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        build-args: |
          INSTANCE_NAME=${{ matrix.instance }}
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}-backend-${{ env.INSTANCE_LOWER }}
        labels: |
          org.opencontainers.image.source=${{ github.repository_owner }}/${{ github.event.repository.name }} 